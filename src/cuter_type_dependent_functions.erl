-module(cuter_type_dependent_functions).
-export([original_tsm/0]).

%% Returns a dictionary with:
%% Keys: Mfas of built-in functions
%% Values: List of signatures of these functions.
-spec original_tsm() -> dict:dict().
original_tsm() ->
  TSM = dict:from_list(
	  [
	   {
	    {erlang,'+',2},
	    [{c,function,
	      [{c,product,
		[{c,number,{int_rng,1,pos_inf},integer},
		 {c,number,{int_rng,1,pos_inf},integer}],
		unknown},
	       {c,number,{int_rng,1,pos_inf},integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,integer},{c,number,any,integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,unknown},{c,number,any,unknown}],
		unknown},
	       {c,number,any,unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'-',2},
	    [{c,function,
	      [{c,product,
		[{c,number,any,integer},{c,number,any,integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,unknown},{c,number,any,unknown}],
		unknown},
	       {c,number,any,unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'*',2},
	    [{c,function,
	      [{c,product,
		[{c,number,{int_rng,1,pos_inf},integer},
		 {c,number,{int_rng,1,pos_inf},integer}],
		unknown},
	       {c,number,{int_rng,1,pos_inf},integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,integer},{c,number,any,integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,unknown},{c,number,any,unknown}],
		unknown},
	       {c,number,any,unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'rem',2},
	    [{c,function,
	      [{c,product,
		[{c,number,any,integer},
		 {c,number,{int_rng,1,pos_inf},integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,integer},
		 {c,number,{int_rng,neg_inf,-1},integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown}]
	   },
	   {
	    {erlang,'div',2},
	    [{c,function,
	      [{c,product,
		[{c,number,any,integer},
		 {c,number,{int_rng,1,pos_inf},integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown},
	     {c,function,
	      [{c,product,
		[{c,number,any,integer},
		 {c,number,{int_rng,neg_inf,-1},integer}],
		unknown},
	       {c,number,any,integer}],
	      unknown}]
	   },
	   {
	    {erlang,'=:=',2},
	    [{c,function,
	      [{c,product,[any,any],unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,length,1},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],unknown}],
		unknown},
	       {c,number,{int_rng,0,pos_inf},integer}],
	      unknown}]
	   },
	   {
	    {erlang,tuple_size,1},
	    [{c,function,
	      [{c,product,[{c,tuple,any,{any,any}}],unknown},
	       {c,number,{int_rng,0,pos_inf},integer}],
	      unknown}]
	   },
	   {
	    {erlang,float,1},
	    [{c,function,
	      [{c,product,[{c,number,any,unknown}],unknown},
	       {c,number,any,float}],
	      unknown}]
	   },
	   {
	    {erlang,list_to_tuple,1},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],unknown}],
		unknown},
	       {c,tuple,any,{any,any}}],
	      unknown}]
	   },
	   {
	    {erlang,tuple_to_list,1},
	    [{c,function,
	      [{c,product,[{c,tuple,any,{any,any}}],unknown},
	       {c,list,[any,{c,nil,[],unknown}],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,int_to_char,1},
	    [{c,function,
	      [{c,product,
		[{c,number,{int_set,[0,1,2,3,4,5,6,7,8,9]},integer}],
		unknown},
	       {c,number,{int_set,"0123456789"},integer}],
	      unknown}]
	   },
	   {
	    {erlang,integer_to_list,1},
	    [{c,function,
	      [{c,product,[{c,number,any,integer}],unknown},
	       {c,list,
		[{c,number,{int_set,"-0123456789"},integer},
		 {c,nil,[],unknown}],
		nonempty}],
	      unknown}]
	   },
	   {
	    {erlang,list_to_integer,1},
	    [{c,function,
	      [{c,product,
		[{c,list,
		  [{c,number,{int_set,"+-0123456789"},integer},
		   {c,nil,[],unknown}],
		  nonempty}],
		unknown},
	       {c,number,any,integer}],
	      unknown}]
	   },
	   {
	    {erlang,abs,1},
	    [{c,function,
	      [{c,product,[{c,number,any,integer}],unknown},
	       {c,number,{int_rng,0,pos_inf},integer}],
	      unknown},
	     {c,function,
	      [{c,product,[{c,number,any,float}],unknown},
	       {c,number,any,float}],
	      unknown}]
	   },
	   {
	    {erlang,trunc,1},
	    [{c,function,
	      [{c,product,[{c,number,any,unknown}],unknown},
	       {c,number,any,integer}],
	      unknown}]
	   },
	   {
	    {erlang,'not',1},
	    [{c,function,
	      [{c,product,[{c,atom,[false,true],unknown}],unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'and',2},
	    [{c,function,
	      [{c,product,
		[{c,atom,[false,true],unknown},
		 {c,atom,[false,true],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'andalso',2},
	    [{c,function,
	      [{c,product,
		[{c,atom,[false,true],unknown},
		 {c,atom,[false,true],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'or',2},
	    [{c,function,
	      [{c,product,
		[{c,atom,[false,true],unknown},
		 {c,atom,[false,true],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'orelse',2},
	    [{c,function,
	      [{c,product,
		[{c,atom,[false,true],unknown},
		 {c,atom,[false,true],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'xor',2},
	    [{c,function,
	      [{c,product,
		[{c,atom,[false,true],unknown},
		 {c,atom,[false,true],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'=/=',2},
	    [{c,function,
	      [{c,product,[any,any],unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'==',2},
	    [{c,function,
	      [{c,product,[any,any],unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,'/=',2},
	    [{c,function,
	      [{c,product,[any,any],unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,hd,1},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],nonempty}],
		unknown},
	       any],
	      unknown}]
	   },
	   {
	    {erlang,tl,1},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],nonempty}],
		unknown},
	       any],
	      unknown}]
	   },
	   {
	    {erlang,'++',2},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],unknown},
		 {c,list,[any,{c,nil,[],unknown}],unknown}],
		unknown},
	       {c,list,[any,{c,nil,[],unknown}],unknown}],
	      unknown}]
	   },
	   {
	    {lists,reverse,2},
	    [{c,function,
	      [{c,product,
		[{c,list,[any,{c,nil,[],unknown}],unknown},
		 {c,list,[any,{c,nil,[],unknown}],unknown}],
		unknown},
	       {c,list,[any,{c,nil,[],unknown}],unknown}],
	      unknown}]
	   },
	   {
	    {lists,member,2},
	    [{c,function,
	      [{c,product,
		[any,{c,list,[any,{c,nil,[],unknown}],unknown}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,is_integer,1},
	    [{c,function,
	      [{c,product,[any],unknown},{c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,is_atom,1},
	    [{c,function,
	      [{c,product,[any],unknown},{c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,is_function,1},
	    [{c,function,
	      [{c,product,[any],unknown},{c,atom,[false,true],unknown}],
	      unknown}]
	   },
	   {
	    {erlang,is_function,2},
	    [{c,function,
	      [{c,product,
		[any,{c,number,{int_rng,1,255},integer}],
		unknown},
	       {c,atom,[false,true],unknown}],
	      unknown}]
	   }
	  ]
	 ),
  TSM.
